Computational Tools for Social Scientists Workshop
========================================================
transition: fade
author: Lars Vilhuber, with  Daniel Lin and many others
date: 2018/8/20-2018/8/22


**Location**: *Ives 111* (*Ives 115* on 2018-08-22) _|_
**Time**: *9:00 - 4:00 p.m.* (we will typically end earlier)


**[Registration](https://cornell.qualtrics.com/jfe/form/SV_bvnKc03yvC4hSpn)**
_|_
[Goals](#/1)  _|_ **[Requirements](#/2)**

Goal
========================================================
The goal of this workshop is to showcase computer-oriented techniques and tools for social science students, from basic command line tools on Linux and Mac to version control to optimization and parallelization techniques for high-performance computing, with reproducible methods training thrown in for good measure. The goal is NOT to teach a full
course on SAS, Stata, Matlab, R, Python, MPI, Fortran, etc. - there are other classes for that. We will teach just enough of each programming language to
be able to highlight additional techniques. There will be hands-on training on a few systems, such as CodeOcean and the new Econ cluster (for economics students). 
 This workshop is designed to open your eyes to the possibilities, scratching
the surface, but mostly not diving into any particular depths. Follow-on short courses may solve those needs. For
specific programming languages, we point to offerings elsewhere on campus, for instance at [CISER](http://www.ciser.cornell.edu). [more](#/2)

===

We highlight that this is a workshop - we will work on problems as a group, drawing on expertise in the room as needed. If you have a specific question, and want to work on it, we may do so. If you want to primarily listen, that's fine too.

Target group
------------
Second year Ph.D. and higher, and faculty, in Economics or other social sciences. If you haven't taken the course in the past, or want a refresher, you should participate

Requirements
-------------
* Working knowledge of at least one statistical programming language (R, SAS, Stata, Matlab, Gauss) - the specific languange is not important.
* Bring your laptop to class!

Setup
========================================================
* [Register](https://cornell.qualtrics.com/jfe/form/SV_bvnKc03yvC4hSpn) 
* Request an account on Econ Cluster on the [account request page](https://www.cac.cornell.edu/services/external/RequestCACid.aspx?ProjectID=lv39_0004)
* Fill out the online survey (SOON) ( results for [2013](SurveyResults2013.pdf),  [2014](Computing_in_Economics_2014_results.pdf)  [2015](Computing_in_Economics_Workshop_Knowledge_2015.pdf), [2017](Computing_in_Economics_2017_results.pdf))


Tentative Agenda - Day 1
========================================================
* 9:00-9:30 [Introduction](intro.html) (Lars) with reference to [earlier](Computing_in_Economics_Workshop_Knowledge_2017.pdf) survey results.

* 9:30-10:15 Motivation: Thinking beyond the laptop in front of you, [Reproducibility](https://ecommons.cornell.edu/bitstream/handle/1813/57256/Vilhuber-BuBa-Mai2018-2154-with-references.pdf?sequence=2&isAllowed=y) (Lars) ([source](http://hdl.handle.net/1813/57256))

* 10:30-12:00 [Basics](../documents/hp-basics.pdf) (Lars),   The command line ([lecture notes](../Git_CL_Slides/Slides_CommandLine.pdf)). A good overview over the basics is [arxiv:1609.00037](https://arxiv.org/pdf/1609.00037.pdf)


***

* 12:00-13:00 Lunch break. Take the opportunity to set yourself on Github.

* 13:00-16:00: [CodeOcean](https://codeocean.com/workshop/cornell-university) Workshop-within-Workshop (April Clyburne-Sherin, CodeOcean)
  * [Flyer](../external/Cornell Workshop QR Bitly.pdf)
  * [Slides](https://shorturl.at/axBN6)


Tentative Agenda - Day 2
========================================================

* 9:00 - 9:30 [Getting access to ECCO (SSH and NX)](../documents/access-to-ecco.pdf)
* 9:30 - 11:00 [Basics of version control](../documents/basics_of_version_control.pdf) (Lars).
 Git (Daniel) [slides](../Git_CL_Slides/Slides_Git.pdf),  [notes](../Git_CL_Slides/Git_Notes.pdf).

* 11:00 - 12:00 Learning to qsub - Hello World example on ECCO (live in class)


***


* 13:00 - 13:45 [Introduction to parallel processing](../web/day2-3.html) (Lars) 
* 14:00 - 14:45 Putting it into practice: Trying out parallel processing
* 15:00-16:00 Subroutines and scalable programming (Lars) [slides](../documents/HPC_Class_SubRoutines.pdf)





Tentative Agenda - Day 3 (optional)
========================================================

* 9:00-11:00 How to use ECCO2/BioHPC (Economics) (Jarek Pillardy)
  * [Presentation](http://cbsu.tc.cornell.edu/lab/doc/Introduction_to_BioHPC_Lab_ECCO.pdf)
  * [BioHPC User Guide](https://cbsu.tc.cornell.edu/lab/userguide.aspx)
* 11:00-12:00  Try it out

***

* 13:00 - 16:00 [Working with Amazon Cloud services at Cornell](http://bit.ly/cu-aws-2018-08-22) (Paul Allen)
* 16:00 Workshop ends

Readings
=========
* Jake Bowers, "[Six steps to a better relationship with your future self](http://www.jakebowers.org/PAPERS/tpm_v18_n2.pdf)", The Political Methodologist, Vol. 18 No. 2, Spring 2011.
* Greg Wilson et al, "[Good enough practices in scientific computing](https://arxiv.org/pdf/1609.00037.pdf)", arXiv 1609.00037v2, Oct 2016

Additional resources
===============================
 * [Some programs referenced in the class](programs.html)
 * Basics courses for SAS, Stata, R, Matlab at [CISER](http://www.ciser.cornell.edu) at [http://ciser.cornell.edu/beta/workshops/](http://ciser.cornell.edu/beta/workshops/) (new times will be posted soon)
 * Computing for Data Analysis [Coursera course](https://www.coursera.org/course/compdata) and the [classes on YouTube](https://www.youtube.com/results?search_query=roger+peng+computing+for+data+analysis)
 * [Code and Data](http://faculty.chicagobooth.edu/jesse.shapiro/research/CodeAndData.pdf)
 * Assessing time and memory usage in R: [a nice brief tutorial](http://www.johnmyleswhite.com/notebook/2011/10/31/using-sparse-matrices-in-r/) *(but with the conclusion to use Matlab...)*
 * Learning how to use doParallel in R: [doParallel vignette](http://cran.r-project.org/web/packages/doParallel/vignettes/gettingstartedParallel.pdf)
 * [A critique of Jupyter notebooks](https://docs.google.com/presentation/d/1n2RlMdmv1p25Xy5thJUhkKGvjtV-dkAIsUXP-AL4ffI/)

Additional older resources
===============================
These may be out-of-date:
 * [A practical example: Big Data Matlab programming](../documents/Matlab%20Big%20Data%20Techniques.pdf)
 * [Leveraging parallel programming techniques in Matlab](../Matlab/peng-matlabparallel.pdf)
 * Explicit parallel programming in SAS (Lars) [Example ](https://github.com/labordynamicsinstitute/code-fragments/tree/master/sas/mpconnect)
 * Parallel programming in Python 
 * Introduction to Julia - parallel processing in Julia 

Past contributors
=================
John Abowd, Rick Mansfield, 
    Hautahi Kingi, Flavio Stanchi, Jean-Francois Houde, 
    Sylverie Herbert, Sida Peng,	 Kevin L. McKinney

Source
==========
* Git: [on Github](https://github.com/labordynamicsinstitute/computing4economists)
* Web: [https://labordynamicsinstitute.github.io/computing4economists/](https://labordynamicsinstitute.github.io/computing4economists/)
